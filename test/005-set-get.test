# vim: ft=tcl ts=4 sw=4 expandtab:

tcltest::test set-1.1 {set async} -constraints {
    serverIsRunning
} -setup {
    set r [retcl new]
} -body {
    set cmdId [$r SET key1 value1]
    $r result $cmdId
} -cleanup {
    $r destroy
} -result OK

tcltest::test set-1.2 {set sync} -constraints {
    serverIsRunning
} -setup {
    set r [retcl new]
} -body {
    $r -sync SET key2 value2
} -cleanup {
    $r destroy
} -result OK

tcltest::test get-1.1 {get async} -constraints {
    serverIsRunning
} -setup {
    set r [retcl new]
} -body {
    set cmdId [$r GET key1]
    $r result $cmdId
} -cleanup {
    $r destroy
} -result value1

tcltest::test get-1.2 {get sync} -constraints {
    serverIsRunning
} -setup {
    set r [retcl new]
} -body {
    $r -sync GET key2
} -cleanup {
    $r destroy
} -result value2

tcltest::test get-1.3 {get disconnect before} -constraints {
    serverIsRunning
} -setup {
    set r [retcl new]
} -body {
    $r disconnect
    $r -sync GET key2
} -cleanup {
    $r destroy
} -returnCodes {
    1
} -result Disconnected

tcltest::test get-1.4 {get disconnect after} -constraints {
    serverIsRunning
} -setup {
    set r [retcl new]
} -body {
    $r client pause 50
    after 10 {
        close [set [info object namespace $r]::sock]
    }
    $r -sync GET key2
} -cleanup {
    $r destroy
} -returnCodes {
    1
} -result Disconnected
