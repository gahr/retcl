# vim: ft=tcl ts=4 sw=4 expandtab:

tcltest::test construct-1.1 {retcl create} -constraints {
    serverIsRunning
} -body {
    retcl create r
    info commands r
} -cleanup {
    rename r {}
} -result r

tcltest::test construct-1.2 {retcl new} -constraints {
    serverIsRunning
} -body {
    set r [retcl new]
    info object class $r
} -cleanup {
    $r destroy
} -result ::retcl

tcltest::test construct-1.3 {noconnect} -constraints {
    serverIsRunning
} -body {
    set r [retcl new -noconnect]
    $r connected
} -cleanup {
    $r destroy
} -result 0

tcltest::test construct-1.4 {wrong option} -constraints {
    serverIsRunning
} -body {
    set r [retcl new -foobar]
} -returnCodes {
    error
} -result {bad option "-foobar": must be -noconnect}

tcltest::test construct-1.4 {wrong # args} -constraints {
    serverIsRunning
} -body {
    set r [retcl new a b c d e]
} -returnCodes {
    error
} -result {wrong # args: must be "?host port?" or "-noconnect"}

tcltest::test construct-1.5 {new syntax w/o host and port} -constraints {
    serverIsRunning
} -body {
    retcl create r -async -keepCache
    list [r connected ] [r ?async] [r ?keepCache] [r ?tls]
} -cleanup {
    r destroy
} -result {1 0 0 0}

tcltest::test construct-1.5 {new syntax w/ host and port} -constraints {
    serverIsRunning
} -body {
    retcl create r localhost 6379 -async -keepCache
    list [r connected ] [r ?async] [r ?keepCache] [r ?tls]
} -cleanup {
    r destroy
} -result {1 0 0 0}

tcltest::test construct-1.6 {new syntax w/ -noconnect} -constraints {
    serverIsRunning
} -body {
    retcl create r -noconnect -async -keepCache {+tls -cafile /etc/redis/ca.crt -certfile /etc/redis/redis.crt -keyfile /etc/redis/redis.key}
    list [r connected ] [r ?async] [r ?keepCache] [r ?tls]
} -cleanup {
    r destroy
} -result {0 0 0 1}
